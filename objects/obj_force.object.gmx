<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_force</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_kinetic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isElectric = false;
useIce = false;
addTrail = false;
partSystem = -1;
partType = -1;

damage = 0;
dmg_mod = 1;
dmg_type = 1;
dmg_mod_increase = 0;
maxSize = 5;

onFire = false;
bounce = false;
destroyOnWall = true;
specialAttack = false;
destroyWhenOut = true;
allowPierce = false;
maxPierce = 15;
aIndex = 0;
for(i = 0; i &lt; maxPierce; i++){
    pierce[i] = undefined;
}
multiHit = false;
maxHitInt = 10;
hitInt = maxHitInt-1;
hit = 0;
maxHit = 30;

isHeal = false;
canDamage = true;

homing = false;
target = -1;
homeRate = 5;
fire = 0;

speedUp = false;
speedingRate = 1;
maxSpeed = 6;

homePlayer = false;
homePlayerOrder = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.class == 0 || global.class == 2){
    if(x &gt; view_xview[0] &amp;&amp; x &lt; view_wview[0]) {
        if(y &gt; view_yview[0] &amp;&amp; y &lt; view_hview[0]) {
            /*if(isElectric) {
                part_type_shape(partType,pt_shape_spark);
                part_type_scale(partType,0.2,0.2);
            }*/
            part_type_direction(partType,0,360,0,0);
            part_type_speed(partType,0.1,0.3,0,0);
            part_type_life(partType,30,30);
            repeat(10) part_particles_create(partSystem,x,y,partType,1);
            part_type_speed(partType,0,0,0,0);
            part_type_life(partType,15,15);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(speed) &lt; maxSpeed){
    target = point_direction(x,y,mouse_x,mouse_y)+irandom_range(-5,5);
    alarm[2] = 1;
}
direction = direction_wipe(direction,target,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire &lt; 1) {fire++;}
if(homing){
    if(homeRate &lt; 20) {homeRate += 0.1;}
    if(instance_exists(target)){
        direction = direction_wipe(direction,point_direction(x,y,target.x,target.y),homeRate);
    }
    else{
        target = instance_find(obj_enemy_parent,irandom(instance_number(obj_enemy_parent)));
    }
}
if(homePlayer){
    var x1 = x+lengthdir_x(1,image_angle);
    var y1 = y+lengthdir_y(1,image_angle);
    var x2 = x+lengthdir_x(1,point_direction(x,y,obj_player.x,obj_player.y));
    var y2 = y+lengthdir_y(1,point_direction(x,y,obj_player.x,obj_player.y));

    var xx = (x2+x1)-x;
    var yy = (y2+y1)-y;
    
    direction = direction_wipe(direction,point_direction(x,y,xx,yy),homePlayerOrder);
    speed = 3;
    //speed = var_wipe(speed,sqrt(sqr(xx)+sqr(yy))/75,100,0.5,0);
    if(instance_exists(obj_enemy_parent)) {
    target = instance_nearest(x,y,obj_enemy_parent);
        if(fire &gt; 0) {
            if(global.skillCooldown[0] &gt; 60) {
                fire -= 4;
            }
            else {
                fire -= 8;
            }
            with(instance_create(x,y,obj_force)) {
                direction = point_direction(x,y,other.target.x,other.target.y);
                dmg_mod = 0.2;
                destroyWhenOut = false;
                if(global.skillCooldown[0] &gt; 60) {dmg_mod = 0.1*useSkill(20,1);}
                if(global.skillCooldown[1] &gt; 300) {
                    allowPierce = true;
                    maxPierce = 2;
                }
                speed = 5;
            }
        }
        /*if(distance_to_object(target) &lt; 32) {
            direction = direction_wipe(direction,point_direction(x,y,target.x,target.y),5);
        }*/
    }
    /*if(distance_to_object(obj_player) &gt; 64){
        direction = direction_wipe(direction,point_direction(x,y,obj_player.x,obj_player.y),5);
    }
    else{
        //direction = direction_wipe(direction,point_direction(x,y,obj_player.x,obj_player.y)+90,2);
        direction += 5;
        x = var_wipe(x,obj_player.x+lengthdir_x(64-(homePlayerOrder*10),direction),100,0,1);
        y = var_wipe(y,obj_player.y+lengthdir_y(64-(homePlayerOrder*10),direction),100,0,1);
    }*/
}
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.class == 3) {
    sprite_index = spr_arrow;
    if (global.skillCooldown[1] &gt; 300) {image_index = 1;} else {image_index = 0;}
}
if(!isElectric){
    if(useIce){
        partSystem = global.iceSystem;
        partType = global.iceType

    }
    else{
        partSystem = global.fireballSystem;
        partType = global.fireballType;
    }
}
else {
    partSystem = global.electricSystem;
    partType = global.electricType;
}
if(global.class == 0) {
    partSystem = global.forceSystem;
    partType = global.forceType;
}
if(speedUp){
    if(speed &lt; maxSpeed){
        speed *= speedingRate;
    }
}
if(addTrail) {
    part_particles_create(partSystem,x,y,partType,1);
}
if(aIndex == maxPierce) {instance_destroy();}
if(hit &gt;= maxHit) {instance_destroy();}
if(global.class == 2 &amp;&amp; !isHeal){
    if(x &lt; room_width || x &gt; 0){
        if(y &lt; room_height || y &gt; 0){
            if(isElectric) {
                part_type_orientation(partType,direction,direction,0,10,false);
            }
            part_particles_create(partSystem,x,y,partType,1);
        }
    }
}
if(isHeal) {
    image_angle++;
    if(image_xscale &lt; maxSize &amp;&amp; image_yscale &lt; maxSize){
        image_xscale += 0.1;
        image_yscale += 0.1;
    }
}
else{
    image_angle = direction;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bounce){
    move_bounce_solid(true);
}
else if(destroyOnWall){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_force">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!isHeal) {instance_destroy();}
with(other) {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(destroyWhenOut){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
